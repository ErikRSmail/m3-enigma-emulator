#include<iostream>
#include<string>
#include"Rotor.h"
#include"Plugboard.h"
#include"Reflector.h"
#include"Enigma.h"

//Must always setRotors and setReflector.
//Must set rotors BEFORE windows else we will get windows 000
//setWindows is optional. not calling this gives us windows 000
//setRingSettings is optional. should be called after setWindows for now
//setPlugs is optional
//setRotors,setWindows,setRingSettings is left to right
int main(){ 
    Enigma enigma;
    enigma.setRotors(2,4,5); //left to right 
    enigma.setWindows(1,11,0); //B L A = 1,11,0
    enigma.setRingSettings(1,20,11); //2 21 12 => 1 20 11
    enigma.setReflector('B');
    enigma.setPlugs('a','v');
    enigma.setPlugs('b','s');
    enigma.setPlugs('c','g');
    enigma.setPlugs('d','l');
    enigma.setPlugs('f','u');
    enigma.setPlugs('h','z');
    enigma.setPlugs('i','n');
    enigma.setPlugs('k','m');
    enigma.setPlugs('o','w');
    enigma.setPlugs('r','x');
    //This text was not generated by this program. This is a real message captured and decrypted in WWII from Operation Barbarossa
    std::string plaintext = "edpudnrgyszrcxnuytpomrmbofktbzrezkmlxlvefgueysiozveqmikubpmmylklttdeismdicagykuactcdomohwxmuuiaubstslrnbzszwnrfxwfyssxjzvijhidishprklkayupadtxqspinqmatlpifsvkdasctacdpbopvhjk";
    
    std::cout << "\nPlaintext: " << plaintext << "\n\n";
    std::string ciphertext = enigma.encrypt(plaintext);
    std::cout << "Ciphertext: " << ciphertext << "\n\n";
    
    Enigma duplicate;
    duplicate.setRotors(2,4,5); //left to right 
    duplicate.setWindows(1,11,0); //B L A = 1,11,0
    duplicate.setRingSettings(1,20,11); //2 21 12 => 1 20 11
    duplicate.setReflector('B');
    duplicate.setPlugs('a','v');
    duplicate.setPlugs('b','s');
    duplicate.setPlugs('c','g');
    duplicate.setPlugs('d','l');
    duplicate.setPlugs('f','u');
    duplicate.setPlugs('h','z');
    duplicate.setPlugs('i','n');
    duplicate.setPlugs('k','m');
    duplicate.setPlugs('o','w');
    duplicate.setPlugs('r','x');

    std::string decryptedPlaintext = duplicate.encrypt(ciphertext);
    std::cout << "Decrypted Plaintext: " << decryptedPlaintext << "\n\n";
}